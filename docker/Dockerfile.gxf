# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.
#
# Docker file to build Isaac ROS - GXF Extensions on x86_64

ARG BASE_IMAGE=nvidia/cuda:11.6.1-devel-ubuntu20.04
FROM ${BASE_IMAGE}

# non-root user name
ARG USERNAME=admin

# disable terminal interaction for apt
ENV DEBIAN_FRONTEND=noninteractive

# GXF fundamentals
# apt-utils: https://github.com/phusion/baseimage-docker/issues/319
RUN apt-get update && apt-get install -y --no-install-recommends \
    apt-utils \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean

# Configure the build for CUDA configuration
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# Copy script into image
RUN mkdir -p /opt/nvidia/gxf
COPY scripts/install_dependencies.sh /opt/nvidia/gxf

RUN mkdir -p /opt/nvidia/gxf/engine/build/scripts
COPY scripts/registry_requirements.txt /opt/nvidia/gxf/engine/build/scripts/registry_requirements.txt
COPY scripts/requirements.txt /opt/nvidia/gxf/engine/build/scripts/requirements.txt

## Install GXF dependencies
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && \
    pushd . >/dev/null && \
    cd /opt/nvidia/gxf && \
    sudo -u ${USERNAME} /usr/bin/python3 -m pip install --upgrade pip && \
    sudo -u ${USERNAME} /opt/nvidia/gxf/install_dependencies.sh && \
    popd \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean

# Install ngc.
RUN curl -s -L https://ngc.nvidia.com/downloads/ngccli_bat_linux.zip -o ngccli_bat_linux.zip \
    && unzip -o ngccli_bat_linux.zip \
    && chmod +x ngc-cli \
    && mv ngc-cli /usr/local/bin/ \
    && rm ngccli_bat_linux.zip

# scripts/update_isaac_ros_nitros_ws_tarball.sh
RUN apt-get update && apt-get install -y --no-install-recommends \
    patchelf \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get clean

# Forcibly downgrade setuptools to version required by ROS 2
# https://github.com/pypa/setuptools/issues/3772
RUN sudo -u ${USERNAME} /usr/bin/python3 -m pip install --force-reinstall setuptools==65.7.0

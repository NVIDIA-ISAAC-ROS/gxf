"""
 SPDX-FileCopyrightText: Copyright (c) 2021-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
 SPDX-License-Identifier: Apache-2.0

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
"""

load(
    "//gxf:gxf.bzl",
    "nv_gxf_ext_deps",
)

nv_gxf_ext_deps(name = "std_ext_deps",
                 ext = "libgxf_std.so",
                 ext_deps = [],
                 visibility = ["//visibility:public"])

alias(
    name = "libgxf_std.so",
    tags = ["manual"],
    actual = select({


        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": "//gxf_x86_64_cuda_12_2/std:libgxf_std.so_release",
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": "//gxf_x86_64_cuda_12_6/std:libgxf_std.so_release",
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": "//gxf_x86_64_rhel9_cuda_12_2/std:libgxf_std.so_release",
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": "//gxf_hp21ea_sbsa/std:libgxf_std.so_release",
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": "//gxf_hp21ga_sbsa/std:libgxf_std.so_release",
        "@com_nvidia_gxf//engine/build:platform_jetpack60": "//gxf_jetpack60/std:libgxf_std.so_release",
        "@com_nvidia_gxf//engine/build:platform_jetpack61": "//gxf_jetpack61/std:libgxf_std.so_release",
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "libgxf_std_static.lo",
    tags = ["manual"],
    linkstatic = True,
    alwayslink = True,
    srcs = select({
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": ["//gxf_x86_64_cuda_12_2/std:libgxf_std_static.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": ["//gxf_x86_64_cuda_12_6/std:libgxf_std_static.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": ["//gxf_x86_64_rhel9_cuda_12_2/std:libgxf_std_static.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": ["//gxf_hp21ea_sbsa/std:libgxf_std_static.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": ["//gxf_hp21ga_sbsa/std:libgxf_std_static.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack60": ["//gxf_jetpack60/std:libgxf_std_static.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack61": ["//gxf_jetpack61/std:libgxf_std_static.lo_release"],
    }),
    linkopts = ["-lpthread"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "std",
    tags = ["manual"],
    hdrs = [
        "allocator.hpp",
        "async_buffer_receiver.hpp",
        "async_buffer_transmitter.hpp",
        "block_memory_pool.hpp",
        "clock.hpp",
        "codelet.hpp",
        "complex.hpp",
        "component_allocator.hpp",
        "component_factory.hpp",
        "controller.hpp",
        "cpu_thread.hpp",
        "default_extension.hpp",
        "dlpack_utils.hpp",
        "double_buffer_receiver.hpp",
        "double_buffer_transmitter.hpp",
        "eos.hpp",
        "event_based_scheduler.hpp",
        "extension.hpp",
        "extension_factory_helper.hpp",
        "graph_driver_worker_common.hpp",
        "graph_driver.hpp",
        "graph_worker.hpp",
        "greedy_scheduler.hpp",
        "ipc_client.hpp",
        "ipc_server.hpp",
        "memory_buffer.hpp",
        "metric.hpp",
        "monitor.hpp",
        "multi_thread_scheduler.hpp",
        "network_context.hpp",
        "new_component_allocator.hpp",
        "queue.hpp",
        "receiver.hpp",
        "resources.hpp",
        "scheduler.hpp",
        "scheduling_condition.hpp",
        "scheduling_term_combiner.hpp",
        "scheduling_term.hpp",
        "scheduling_terms.hpp",
        "system.hpp",
        "tensor.hpp",
        "timestamp.hpp",
        "topic.hpp",
        "transmitter.hpp",
        "unbounded_allocator.hpp",
        "vault.hpp",
        "gems/event_list/event_list.hpp",
        "gems/event_list/unique_event_list.hpp",
        "gems/queue_thread/queue_thread.hpp",
        "gems/staging_queue/staging_queue.hpp",
        "gems/staging_queue/staging_queue_iterator.hpp",
        "gems/timed_job_list/timed_job_list.hpp",
        "gems/utils/time.hpp",
        "gems/video_buffer/allocator.hpp"
    ],
    deps = ["@dlpack"],
    visibility = ["//visibility:public"],
)

cc_import(
    name = "libstd",
    tags = ["manual"],
    shared_library = ":libgxf_std.so",
    static_library = ":libgxf_std_static.lo",
    hdrs = [
        "allocator.hpp",
        "async_buffer_receiver.hpp",
        "async_buffer_transmitter.hpp",
        "block_memory_pool.hpp",
        "clock.hpp",
        "codelet.hpp",
        "complex.hpp",
        "component_allocator.hpp",
        "component_factory.hpp",
        "controller.hpp",
        "cpu_thread.hpp",
        "default_extension.hpp",
        "dlpack_utils.hpp",
        "double_buffer_receiver.hpp",
        "double_buffer_transmitter.hpp",
        "eos.hpp",
        "event_based_scheduler.hpp",
        "extension.hpp",
        "extension_factory_helper.hpp",
        "graph_driver_worker_common.hpp",
        "graph_driver.hpp",
        "graph_worker.hpp",
        "greedy_scheduler.hpp",
        "ipc_client.hpp",
        "ipc_server.hpp",
        "memory_buffer.hpp",
        "metric.hpp",
        "monitor.hpp",
        "multi_thread_scheduler.hpp",
        "network_context.hpp",
        "new_component_allocator.hpp",
        "queue.hpp",
        "receiver.hpp",
        "resources.hpp",
        "scheduler.hpp",
        "scheduling_condition.hpp",
        "scheduling_term_combiner.hpp",
        "scheduling_term.hpp",
        "scheduling_terms.hpp",
        "system.hpp",
        "tensor.hpp",
        "timestamp.hpp",
        "topic.hpp",
        "transmitter.hpp",
        "unbounded_allocator.hpp",
        "vault.hpp",
        "gems/event_list/event_list.hpp",
        "gems/event_list/unique_event_list.hpp",
        "gems/queue_thread/queue_thread.hpp",
        "gems/staging_queue/staging_queue.hpp",
        "gems/staging_queue/staging_queue_iterator.hpp",
        "gems/timed_job_list/timed_job_list.hpp",
        "gems/utils/time.hpp",
        "gems/video_buffer/allocator.hpp"
    ],
    deps = ["@dlpack"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "default_extension",
    tags = ["manual"],
    linkstatic = True,
    alwayslink = True,
    hdrs = ["default_extension.hpp"],
    srcs = select({
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": ["//gxf_x86_64_cuda_12_2/std:libdefault_extension.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": ["//gxf_x86_64_cuda_12_6/std:libdefault_extension.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": ["//gxf_x86_64_rhel9_cuda_12_2/std:libdefault_extension.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": ["//gxf_hp21ea_sbsa/std:libdefault_extension.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": ["//gxf_hp21ga_sbsa/std:libdefault_extension.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack60": ["//gxf_jetpack60/std:libdefault_extension.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack61": ["//gxf_jetpack61/std:libdefault_extension.lo_release"],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "dlpack_utils",
    tags = ["manual"],
    linkstatic = True,
    alwayslink = True,
    hdrs = ["dlpack_utils.hpp"],
    srcs = select({
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": ["//gxf_x86_64_cuda_12_2/std:libdlpack_utils.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": ["//gxf_x86_64_cuda_12_6/std:libdlpack_utils.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": ["//gxf_x86_64_rhel9_cuda_12_2/std:libdlpack_utils.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": ["//gxf_hp21ea_sbsa/std:libdlpack_utils.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": ["//gxf_hp21ga_sbsa/std:libdlpack_utils.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack60": ["//gxf_jetpack60/std:libdlpack_utils.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack61": ["//gxf_jetpack61/std:libdlpack_utils.lo_release"],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "metric",
    tags = ["manual"],
    linkstatic = True,
    alwayslink = True,
    hdrs = ["metric.hpp"],
    srcs = select({
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": ["//gxf_x86_64_cuda_12_2/std:libmetric.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": ["//gxf_x86_64_cuda_12_6/std:libmetric.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": ["//gxf_x86_64_rhel9_cuda_12_2/std:libmetric.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": ["//gxf_hp21ea_sbsa/std:libmetric.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": ["//gxf_hp21ga_sbsa/std:libmetric.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack60": ["//gxf_jetpack60/std:libmetric.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack61": ["//gxf_jetpack61/std:libmetric.lo_release"],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "tensor",
    tags = ["manual"],
    linkstatic = True,
    alwayslink = True,
    hdrs = ["tensor.hpp"],
    deps = ["@dlpack", "dlpack_utils"],
    srcs = select({
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": ["//gxf_x86_64_cuda_12_2/std:libtensor.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": ["//gxf_x86_64_cuda_12_6/std:libtensor.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": ["//gxf_x86_64_rhel9_cuda_12_2/std:libtensor.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": ["//gxf_hp21ea_sbsa/std:libtensor.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": ["//gxf_hp21ga_sbsa/std:libtensor.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack60": ["//gxf_jetpack60/std:libtensor.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack61": ["//gxf_jetpack61/std:libtensor.lo_release"],
    }),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "yaml_file_loader",
    tags = ["manual"],
    linkstatic = True,
    alwayslink = True,
    hdrs = ["yaml_file_loader.hpp"],
    srcs = select({
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_2": ["//gxf_x86_64_cuda_12_2/std:libyaml_file_loader.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_cuda_12_6": ["//gxf_x86_64_cuda_12_6/std:libyaml_file_loader.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_x86_64_rhel9_cuda_12_2": ["//gxf_x86_64_rhel9_cuda_12_2/std:libyaml_file_loader.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ea_sbsa": ["//gxf_hp21ea_sbsa/std:libyaml_file_loader.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_hp21ga_sbsa": ["//gxf_hp21ga_sbsa/std:libyaml_file_loader.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack60": ["//gxf_jetpack60/std:libyaml_file_loader.lo_release"],
        "@com_nvidia_gxf//engine/build:platform_jetpack61": ["//gxf_jetpack61/std:libyaml_file_loader.lo_release"],
    }),
    visibility = ["//visibility:public"],
)
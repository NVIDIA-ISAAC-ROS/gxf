# SPDX-FileCopyrightText: Copyright (c) 2021-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

_workspace_name = "com_nvidia_gxf"

workspace(name = _workspace_name)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("//third_party:cuda.bzl", "cuda_workspace")
load("//third_party:gxf.bzl", "gxf_python_workspace", "gxf_test_data", "gxf_tools_workspace", "gxf_workspace")
load("//third_party:nvsci.bzl", "nvsci_workspace")

cuda_workspace()

nvsci_workspace()

gxf_workspace()

gxf_python_workspace()

gxf_tools_workspace()

gxf_test_data()  # NV-INTERNAL

####################################################################################################

# Configures toolchain
load("//engine/build/toolchain:toolchain.bzl", "toolchain_configure")

toolchain_configure(name = "toolchain")

# Register python toolchain for various python versions
register_toolchains("//engine/build/toolchain/python:py_toolchain")

# Register go toolchain.
load("@io_bazel_rules_go//go:deps.bzl", "go_register_toolchains")
go_register_toolchains()

# Register docker toolchain.
load(
    "@io_bazel_rules_docker//toolchains/docker:toolchain.bzl",
    docker_toolchain_configure = "toolchain_configure",
)

docker_toolchain_configure(name = "docker_config", client_config = "$HOME/.docker", docker_path = "/usr/bin/docker")

####################################################################################################

# The global base images for GXF
load("//bzl:docker_images.bzl", "docker_images")
docker_images()

load("@io_bazel_rules_go//go:deps.bzl", "go_rules_dependencies")
go_rules_dependencies()

load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")
gazelle_dependencies()

load("@io_bazel_rules_docker//repositories:repositories.bzl", container_repositories = "repositories")
container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")
container_deps()
####################################################################################################

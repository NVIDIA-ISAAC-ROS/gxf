#########################################################################
# SPDX-FileCopyrightText: Copyright (c) 2021-2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##########################################################################

This project provides the bazel rules / infrastructure for building Graph
extensions.

Extensions (shared libraries) built using this project will include the following
software. Check LICENSE.txt for the corresponding licenses.
- yaml-cpp

This project requires that the Graph Composer package be installed on the system.

Install dependencies

$ /opt/nvidia/graph-composer/extension-dev/install_dependencies.sh

Use "--allow-root" argument if the dependencies are being installed inside a
docker container.

A script has been provided to generate a sample extension and a graph to test
the extension. The generated extension contains a single codelet component that
logs a message in the start() and tick() methods once and the graph finishes
execution. To use the script, run the following commands.

Generate sample extension

$ python3 /opt/nvidia/graph-composer/extension-dev/generate_codelet.py \
     --output_dir $HOME  --extn_name MyTestExtension --codelet_name MyTestCodelet
$ cd MyTestExtension

Build the extension

$ cd <extension_path>
$ bazel build ...
$ bazel build ... --config=jetson        # For building jetson(aarch64) variant

- Run the sample graph
$ /opt/nvidia/graph-composer/execute_graph.sh -d /opt/nvidia/graph-composer/config/target_x86_64.yaml apps/app.yaml

This will print the following logs generated by the test component among others:
INFO  extensions/MyTestExtension/MyTestComponenet.cpp@9: MyTestComponenet::start
INFO  extensions/MyTestExtension/MyTestComponenet.cpp@14: MyTestComponenet::tick

Replace implementation in tick() and start() with custom implementation.



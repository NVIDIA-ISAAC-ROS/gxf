# SPDX-FileCopyrightText: Copyright (c) 2020-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

build --nokeep_going --color=yes -c opt --crosstool_top=@toolchain//crosstool:toolchain --jobs 16

build --experimental_scale_timeouts=100  # Let the giantic coverity repo take all the time it wants.

build --action_env=GXF_REGISTRY_ROOT # Use custom root path if set

build --workspace_status_command=bzl/mkstamp.sh

# Grpc build 1.48.0 does not build out of the box with bazel 6.0.0
# Support for bazel-6.0.0 has since been added but until we move to a newer version
# this build flag is needed. More info: https://github.com/grpc/grpc/issues/32013
build --noincompatible_use_platforms_repo_for_constraints
run --noincompatible_use_platforms_repo_for_constraints

# Uncomment to read LD_LIBRARY_PATH into bazel env
# build --action_env=LD_LIBRARY_PATH

# Read NGC API KEY for registry operations
build --action_env=NGC_API_KEY

# Allow address reuse in UCX
# (see https://github.com/openucx/ucx/issues/8585 and https://github.com/rapidsai/ucxx#c-1)
build --action_env=UCX_TCP_CM_REUSEADDR=y

# Disable maybe-uninitialized warnings from GRPC dependency libs
build:debug --compilation_mode=dbg --strip=never --copt="-g" --copt="-Wno-maybe-uninitialized"

# Always strip debugging information
build --strip=always

build:composer --define=dummy_pygxf=true
build:composer --action_env=dummy_pygxf=true

# Default build configuration
build --cpu=k8
build --action_env=cpu="k8"
build --compiler=gcc-11
build --action_env=compiler="gcc-11"
build --define=os=ubuntu_22_04
build --action_env=os="ubuntu_22_04"
build --define=target_platform=x86_64_cuda_12_6
build --action_env=target_platform="x86_64_cuda_12_6"
build --define=python=python3_10

# Build with c++11 ABI disabled
build:disable_cxx11_abi --define=disable_cxx11_abi=True
build:disable_cxx11_abi --action_env=disable_cxx11_abi="True"

# Default x86_64_cuda_12_2 build config
build:x86_64_cuda_12_2 --cpu=k8
build:x86_64_cuda_12_2 --action_env=cpu="k8"
build:x86_64_cuda_12_2 --compiler=gcc-11
build:x86_64_cuda_12_2 --action_env=compiler="gcc-11"
build:x86_64_cuda_12_2 --define=os=ubuntu_22_04
build:x86_64_cuda_12_2 --action_env=os="ubuntu_22_04"
build:x86_64_cuda_12_2 --define=target_platform=x86_64_cuda_12_2
build:x86_64_cuda_12_2 --action_env=target_platform="x86_64_cuda_12_2"
build:x86_64_cuda_12_2 --define=python=python3_10

build:x86_64_cuda_12_6 --cpu=k8
build:x86_64_cuda_12_6 --action_env=cpu="k8"
build:x86_64_cuda_12_6 --compiler=gcc-11
build:x86_64_cuda_12_6 --action_env=compiler="gcc-11"
build:x86_64_cuda_12_6 --define=os=ubuntu_22_04
build:x86_64_cuda_12_6 --action_env=os="ubuntu_22_04"
build:x86_64_cuda_12_6 --define=target_platform=x86_64_cuda_12_6
build:x86_64_cuda_12_6 --action_env=target_platform="x86_64_cuda_12_6"
build:x86_64_cuda_12_6 --define=python=python3_10

build:x86_64_rhel9_cuda_12_2 --cpu=k8
build:x86_64_rhel9_cuda_12_2 --action_env=cpu="k8"
build:x86_64_rhel9_cuda_12_2 --compiler=gcc-11
build:x86_64_rhel9_cuda_12_2 --action_env=compiler="gcc-11"
build:x86_64_rhel9_cuda_12_2 --define=os=rhel9
build:x86_64_rhel9_cuda_12_2 --action_env=os="rhel9"
build:x86_64_rhel9_cuda_12_2 --define=target_platform=x86_64_rhel9_cuda_12_2 --strip=always
build:x86_64_rhel9_cuda_12_2 --action_env=target_platform="x86_64_rhel9_cuda_12_2"
build:x86_64_rhel9_cuda_12_2 --define=python=python3_10

# Holopack configurations
build:hp21ea_sbsa --cpu=aarch64_sbsa
build:hp21ea_sbsa --action_env=cpu="aarch64_sbsa"
build:hp21ea_sbsa --compiler=gcc-11
build:hp21ea_sbsa --action_env=compiler="gcc-11"
build:hp21ea_sbsa --define=os=ubuntu_22_04
build:hp21ea_sbsa --action_env=os="ubuntu_22_04"
build:hp21ea_sbsa --define=target_platform=hp21ea_sbsa
build:hp21ea_sbsa --action_env=target_platform="hp21ea_sbsa"
build:hp21ea_sbsa --define=python=python3_10

build:hp21ga_sbsa --cpu=aarch64_sbsa
build:hp21ga_sbsa --action_env=cpu="aarch64_sbsa"
build:hp21ga_sbsa --compiler=gcc-11
build:hp21ga_sbsa --action_env=compiler="gcc-11"
build:hp21ga_sbsa --define=os=ubuntu_22_04
build:hp21ga_sbsa --action_env=os="ubuntu_22_04"
build:hp21ga_sbsa --define=target_platform=hp21ga_sbsa
build:hp21ga_sbsa --action_env=target_platform="hp21ga_sbsa"
build:hp21ga_sbsa --define=python=python3_10

# Jetpack configurations
build:jetpack60 --cpu=aarch64
build:jetpack60 --action_env=cpu="aarch64"
build:jetpack60 --compiler=gcc-11
build:jetpack60 --action_env=compiler="gcc-11"
build:jetpack60 --define=os=ubuntu_22_04
build:jetpack60 --action_env=os="ubuntu_22_04"
build:jetpack60 --define=target_platform=jetpack60
build:jetpack60 --action_env=target_platform="jetpack60"
build:jetpack60 --define=python=python3_10

build:jetpack61 --cpu=aarch64
build:jetpack61 --action_env=cpu="aarch64"
build:jetpack61 --compiler=gcc-11
build:jetpack61 --action_env=compiler="gcc-11"
build:jetpack61 --define=os=ubuntu_22_04
build:jetpack61 --action_env=os="ubuntu_22_04"
build:jetpack61 --define=target_platform=jetpack61
build:jetpack61 --action_env=target_platform="jetpack61"
build:jetpack61 --define=python=python3_10

test --test_output=errors --keep_going --color=yes -c opt --features=legacy_whole_archive

test:lint --build_tests_only
test:lint --test_tag_filters=lint

# Container builder tests
test:container_builder --action_env=API_KEY
# depending on cache, building containers from scratch
# might need extra time
test:container_builder --test_timeout=3000

# `--config=coverity` for coverity tests
test:coverity --build_tests_only
test:coverity --test_tag_filters=coverity
test:coverity --define=run_coverity="True"
test:coverity --//coverity:coverity_config=autosar-only

# GCOV configs for generating instrumented builds.
build:gcov --copt="-O0" --copt="-coverage" --copt="-fprofile-arcs" --copt="-ftest-coverage"
build:gcov --linkopt="-lgcov"
build:gcov --collect_code_coverage --java_runtime_version=remotejdk_11

# Enable packaging
build:package --define=packaging="True"

# Sanitizer Configs
# --config asan: Address Sanitizer
build:asan --compilation_mode=dbg --strip=never --copt="-g" --copt="-O0"
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

# --config tsan: Thread Sanitizer
build:tsan --compilation_mode=dbg --strip=never --copt="-g" --copt="-O0"
build:tsan --copt -fsanitize=thread
build:tsan --copt -fno-omit-frame-pointer
build:tsan --linkopt -fsanitize=thread
# This is needed to address false positive problem with abseil.
# https://github.com/google/sanitizers/issues/953
build:tsan --test_env=TSAN_OPTIONS=report_atomic_races=0
build:tsan --action_env=TSAN_OPTIONS=second_deadlock_stack=1

# Remote Execution Configuration
build:remote_exec_rpt --remote_default_exec_properties=container-image=urm.nvidia.com/sw-isaac-public-docker/gxf-gxf-nightly-x86_64_cuda_12_2:287-ci
build:remote_exec_rpt --remote_instance_name=rpt-remote-exec
build:remote_exec_rpt --remote_executor=grpc://10.178.201.18:32351
build:remote_exec_rpt --remote_download_minimal
build:remote_exec_rpt --remote_timeout=3600
build:remote_exec_rpt --jobs=256
build:remote_exec_rpt --config=x86_64_cuda_12_2
